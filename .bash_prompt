#!/usr/local/bin/bash
# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

[[ "$DEBUG_STARTUP:" == "1:" ]] && echo "RUNNING $HOME/.bash_prompt"

if [[ $- == *i* ]]; then 
  if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
  elif [[ $TERM = alacritty ]]; then
    export TERM=alacritty
  elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM=xterm-256color
  fi

  if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
      # Changed these colors to fit Solarized theme
      MAGENTA=$(tput setaf 125)
      ORANGE=$(tput setaf 166)
      GREEN=$(tput setaf 64)
      PURPLE=$(tput setaf 61)
      WHITE=$(tput setaf 244)
    else
      MAGENTA=$(tput setaf 5)
      ORANGE=$(tput setaf 4)
      GREEN=$(tput setaf 2)
      PURPLE=$(tput setaf 1)
      WHITE=$(tput setaf 7)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
  else
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BOLD=""
    RESET="\033[m"
  fi

  export MAGENTA
  export ORANGE
  export GREEN
  export PURPLE
  export WHITE
  export BOLD
  export RESET

  function parse_git_dirty() {
    [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
  }

  function parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
  }

  export PS1="\[${BOLD}${MAGENTA}\]\u \[$WHITE\]at \[$ORANGE\]\h \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
  export PS2="\[$ORANGE\]→ \[$RESET\]"
  PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}builtin history -a; builtin history -c; builtin history -r"
  export PROMPT_COMMAND
else

  parse_git_dirty() {
    echo ''
  }

  parse_git_branch() {
    echo ''
  }

  export PROMPT_COMMAND="builtin history -a; builtin history -c; builtin history -r"
fi

export HISTCONTROL=ignoredups:erasedups
export HISTSIZE=-1
export HISTFILESIZE=-1
shopt -s histappend
export PROMPT_COMMAND

touch "$HOME/.bash_eternal_history"

if [ ! $FAST_STARTUP -gt 0 ]; then 
  if [ "$(wc -l $HOME/.bash_history | $AWK '{print $1}')" -gt "$(wc -l $HOME/.bash_eternal_history | $AWK '{print $1}')" ]; then
    cp "$HOME/.bash_history" "$HOME/.bash_eternal_history"
  else
    _dbg "!!!! $HOME/.bash_eternal_history is longer than $HOME/.bash_history -- Something strange has happened." 0
    tmpfile=$(mktemp)
    mv .bash_history $tmpfile
    cp .bash_eternal_history .bash_history
    mv $tmpfile .bash_history.$(basename $tmpfile)
  fi
fi


# vim: ft=sh
