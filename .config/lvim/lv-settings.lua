-- lvim.builtin.bufferline.options.custom_filter = function ()
-- lvim.builtin.bufferline.options.diagnostics_indicator = function ()
-- lvim.builtin.bufferline.options.name_formatter = function ()
-- lvim.builtin.cmp.formatting.format = function ()
-- lvim.builtin.cmp.mapping["<C-D>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-E>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-F>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-K>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-Space>"].i = function ()
-- lvim.builtin.cmp.mapping["<CR>"].i = function ()
-- lvim.builtin.cmp.mapping["<NL>"].i = function ()
-- lvim.builtin.cmp.mapping["<S-Tab>"].i = function ()
-- lvim.builtin.cmp.mapping["<S-Tab>"].s = function ()
-- lvim.builtin.cmp.mapping["<Tab>"].i = function ()
-- lvim.builtin.cmp.mapping["<Tab>"].s = function ()
-- lvim.builtin.cmp.snippet.expand = function ()
-- lvim.builtin.comment.pre_hook = function ()
-- lvim.builtin.lualine.sections.lualine_a["1"]["1"] = function ()
-- lvim.builtin.lualine.sections.lualine_b["1"].cond = function ()
-- lvim.builtin.lualine.sections.lualine_c["1"].source = function ()
-- lvim.builtin.lualine.sections.lualine_c["2"].cond = function ()
-- lvim.builtin.lualine.sections.lualine_c["2"]["1"] = function ()
-- lvim.builtin.lualine.sections.lualine_x["1"].cond = function ()
-- lvim.builtin.lualine.sections.lualine_x["2"].cond = function ()
-- lvim.builtin.lualine.sections.lualine_x["2"]["1"] = function ()
-- lvim.builtin.lualine.sections.lualine_x["3"].cond = function ()
-- lvim.builtin.lualine.sections.lualine_x["3"]["1"] = function ()
-- lvim.builtin.lualine.sections.lualine_x["4"].cond = function ()
-- lvim.builtin.lualine.sections.lualine_z["1"]["1"] = function ()
-- lvim.builtin.telescope.file_previewer = function ()
-- lvim.builtin.telescope.file_sorter = function ()
-- lvim.builtin.telescope.generic_sorter = function ()
-- lvim.builtin.telescope.grep_previewer = function ()
-- lvim.builtin.telescope.qflist_previewer = function ()
-- lvim.builtin.which_key.mappings.f["1"] = function ()
-- lvim.lsp.diagnostics.float.format = function ()
-- lvim.lsp.on_attach_callback = function ()
-- lvim.plugins["10"].config = function ()
-- lvim.plugins["3"].config = function ()
-- lvim.plugins["5"].run = function ()
-- lvim.plugins["6"].config = function ()
-- lvim.plugins["7"].config = function ()
-- lvim.plugins["8"].config = function ()
lvim.autocommands._auto_resize["1"]["1"] = "VimResized"
lvim.autocommands._auto_resize["1"]["2"] = "*"
lvim.autocommands._auto_resize["1"]["3"] = "tabdo wincmd ="
lvim.autocommands._buffer_bindings["1"]["1"] = "FileType"
lvim.autocommands._buffer_bindings["1"]["2"] = "floaterm"
lvim.autocommands._buffer_bindings["1"]["3"] = "nnoremap <silent> <buffer> q :q<CR>"
lvim.autocommands._formatoptions["1"]["1"] = "BufWinEnter,BufRead,BufNewFile"
lvim.autocommands._formatoptions["1"]["2"] = "*"
lvim.autocommands._formatoptions["1"]["3"] = "setlocal formatoptions-=c formatoptions-=r formatoptions-=o"
lvim.autocommands._general_lsp["1"]["1"] = "FileType"
lvim.autocommands._general_lsp["1"]["2"] = "lspinfo,lsp-installer,null-ls-info"
lvim.autocommands._general_lsp["1"]["3"] = "nnoremap <silent> <buffer> q :close<CR>"
lvim.autocommands._general_settings["1"]["1"] = "FileType"
lvim.autocommands._general_settings["1"]["2"] = "qf,help,man"
lvim.autocommands._general_settings["1"]["3"] = "nnoremap <silent> <buffer> q :close<CR>"
lvim.autocommands._general_settings["2"]["1"] = "TextYankPost"
lvim.autocommands._general_settings["2"]["2"] = "*"
lvim.autocommands._general_settings["2"]["3"] =
  "lua require('vim.highlight').on_yank({higroup = 'Search', timeout = 200})"
lvim.autocommands._general_settings["3"]["1"] = "BufWinEnter"
lvim.autocommands._general_settings["3"]["2"] = "dashboard"
lvim.autocommands._general_settings["3"]["3"] = "setlocal cursorline signcolumn=yes cursorcolumn number"
lvim.autocommands._general_settings["4"]["1"] = "BufWritePost"
lvim.autocommands._general_settings["4"]["2"] = "/Users/dmr/.config/lvim/config.lua"
lvim.autocommands._general_settings["4"]["3"] = "lua require('lvim.config'):reload()"
lvim.autocommands._general_settings["5"]["1"] = "FileType"
lvim.autocommands._general_settings["5"]["2"] = "qf"
lvim.autocommands._general_settings["5"]["3"] = "set nobuflisted"
lvim.autocommands._git["1"]["1"] = "FileType"
lvim.autocommands._git["1"]["2"] = "gitcommit"
lvim.autocommands._git["1"]["3"] = "setlocal wrap"
lvim.autocommands._git["2"]["1"] = "FileType"
lvim.autocommands._git["2"]["2"] = "gitcommit"
lvim.autocommands._git["2"]["3"] = "setlocal spell"
lvim.autocommands._markdown["1"]["1"] = "FileType"
lvim.autocommands._markdown["1"]["2"] = "markdown"
lvim.autocommands._markdown["1"]["3"] = "setlocal wrap"
lvim.autocommands._markdown["2"]["1"] = "FileType"
lvim.autocommands._markdown["2"]["2"] = "markdown"
lvim.autocommands._markdown["2"]["3"] = "setlocal spell"
lvim.autocommands.custom_groups["1"]["1"] = "BufWinEnter,BufRead,BufNewFile"
lvim.autocommands.custom_groups["1"]["2"] = "*"
lvim.autocommands.custom_groups["1"]["3"] = "chdir %:p:h"
lvim.builtin.autopairs.active = true
lvim.builtin.autopairs.check_ts = true
lvim.builtin.autopairs.disable_filetype["1"] = "TelescopePrompt"
lvim.builtin.autopairs.disable_filetype["2"] = "spectre_panel"
lvim.builtin.autopairs.disable_in_macro = false
lvim.builtin.autopairs.disable_in_visualblock = false
lvim.builtin.autopairs.enable_afterquote = true
lvim.builtin.autopairs.enable_check_bracket_line = false
lvim.builtin.autopairs.enable_moveright = true
lvim.builtin.autopairs.fast_wrap.chars["1"] = "{"
lvim.builtin.autopairs.fast_wrap.chars["2"] = "["
lvim.builtin.autopairs.fast_wrap.chars["3"] = "("
lvim.builtin.autopairs.fast_wrap.chars["4"] = '"'
lvim.builtin.autopairs.fast_wrap.chars["5"] = "'"
lvim.builtin.autopairs.fast_wrap.check_comma = true
lvim.builtin.autopairs.fast_wrap.end_key = "$"
lvim.builtin.autopairs.fast_wrap.highlight = "Search"
lvim.builtin.autopairs.fast_wrap.highlight_grey = "Comment"
lvim.builtin.autopairs.fast_wrap.keys = "qwertyuiopzxcvbnmasdfghjkl"
lvim.builtin.autopairs.fast_wrap.map = "<M-e>"
lvim.builtin.autopairs.fast_wrap.offset = 0
lvim.builtin.autopairs.fast_wrap.pattern = "[%'%\"%)%>%]%)%}%,]"
lvim.builtin.autopairs.ignored_next_char = "[%w%%%'%[%\"%.]"
lvim.builtin.autopairs.map_bs = true
lvim.builtin.autopairs.map_c_w = false
lvim.builtin.autopairs.map_char.all = "("
lvim.builtin.autopairs.map_char.tex = "{"
lvim.builtin.autopairs.ts_config.java = false
lvim.builtin.autopairs.ts_config.javascript["1"] = "string"
lvim.builtin.autopairs.ts_config.javascript["2"] = "template_string"
lvim.builtin.autopairs.ts_config.lua["1"] = "string"
lvim.builtin.autopairs.ts_config.lua["2"] = "source"
lvim.builtin.bufferline.active = true
lvim.builtin.bufferline.highlights.background.gui = "italic"
lvim.builtin.bufferline.highlights.buffer_selected.gui = "bold"
lvim.builtin.bufferline.options.always_show_bufferline = false
lvim.builtin.bufferline.options.buffer_close_icon = ""
lvim.builtin.bufferline.options.close_command = "bdelete! %d"
lvim.builtin.bufferline.options.close_icon = ""
lvim.builtin.bufferline.options.diagnostics = "nvim_lsp"
lvim.builtin.bufferline.options.diagnostics_update_in_insert = false
lvim.builtin.bufferline.options.enforce_regular_tabs = false
lvim.builtin.bufferline.options.indicator_icon = "▎"
lvim.builtin.bufferline.options.left_mouse_command = "buffer %d"
lvim.builtin.bufferline.options.left_trunc_marker = ""
lvim.builtin.bufferline.options.max_name_length = 18
lvim.builtin.bufferline.options.max_prefix_length = 15
lvim.builtin.bufferline.options.modified_icon = "●"
lvim.builtin.bufferline.options.numbers = "none"
lvim.builtin.bufferline.options.offsets["1"].filetype = "undotree"
lvim.builtin.bufferline.options.offsets["1"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["1"].padding = 1
lvim.builtin.bufferline.options.offsets["1"].text = "Undotree"
lvim.builtin.bufferline.options.offsets["2"].filetype = "NvimTree"
lvim.builtin.bufferline.options.offsets["2"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["2"].padding = 1
lvim.builtin.bufferline.options.offsets["2"].text = "Explorer"
lvim.builtin.bufferline.options.offsets["3"].filetype = "DiffviewFiles"
lvim.builtin.bufferline.options.offsets["3"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["3"].padding = 1
lvim.builtin.bufferline.options.offsets["3"].text = "Diff View"
lvim.builtin.bufferline.options.offsets["4"].filetype = "flutterToolsOutline"
lvim.builtin.bufferline.options.offsets["4"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["4"].text = "Flutter Outline"
lvim.builtin.bufferline.options.offsets["5"].filetype = "packer"
lvim.builtin.bufferline.options.offsets["5"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["5"].padding = 1
lvim.builtin.bufferline.options.offsets["5"].text = "Packer"
lvim.builtin.bufferline.options.persist_buffer_sort = true
lvim.builtin.bufferline.options.right_mouse_command = "vert sbuffer %d"
lvim.builtin.bufferline.options.right_trunc_marker = ""
lvim.builtin.bufferline.options.separator_style = "thin"
lvim.builtin.bufferline.options.show_buffer_close_icons = true
lvim.builtin.bufferline.options.show_buffer_icons = true
lvim.builtin.bufferline.options.show_close_icon = false
lvim.builtin.bufferline.options.show_tab_indicators = true
lvim.builtin.bufferline.options.sort_by = "id"
lvim.builtin.bufferline.options.tab_size = 18
lvim.builtin.cmp.completion.keyword_length = 1
lvim.builtin.cmp.confirm_opts.behavior = "replace"
lvim.builtin.cmp.confirm_opts.select = false
lvim.builtin.cmp.documentation.border["1"] = "╭"
lvim.builtin.cmp.documentation.border["2"] = "─"
lvim.builtin.cmp.documentation.border["3"] = "╮"
lvim.builtin.cmp.documentation.border["4"] = "│"
lvim.builtin.cmp.documentation.border["5"] = "╯"
lvim.builtin.cmp.documentation.border["6"] = "─"
lvim.builtin.cmp.documentation.border["7"] = "╰"
lvim.builtin.cmp.documentation.border["8"] = "│"
lvim.builtin.cmp.experimental.ghost_text = true
lvim.builtin.cmp.experimental.native_menu = false
lvim.builtin.cmp.formatting.duplicates.buffer = 1
lvim.builtin.cmp.formatting.duplicates.luasnip = 1
lvim.builtin.cmp.formatting.duplicates.nvim_lsp = 0
lvim.builtin.cmp.formatting.duplicates.path = 1
lvim.builtin.cmp.formatting.duplicates_default = 0
lvim.builtin.cmp.formatting.fields["1"] = "kind"
lvim.builtin.cmp.formatting.fields["2"] = "abbr"
lvim.builtin.cmp.formatting.fields["3"] = "menu"
lvim.builtin.cmp.formatting.kind_icons.Class = " "
lvim.builtin.cmp.formatting.kind_icons.Color = " "
lvim.builtin.cmp.formatting.kind_icons.Constant = "ﲀ "
lvim.builtin.cmp.formatting.kind_icons.Constructor = " "
lvim.builtin.cmp.formatting.kind_icons.Enum = "練"
lvim.builtin.cmp.formatting.kind_icons.EnumMember = " "
lvim.builtin.cmp.formatting.kind_icons.Event = " "
lvim.builtin.cmp.formatting.kind_icons.Field = " "
lvim.builtin.cmp.formatting.kind_icons.File = ""
lvim.builtin.cmp.formatting.kind_icons.Folder = " "
lvim.builtin.cmp.formatting.kind_icons.Function = " "
lvim.builtin.cmp.formatting.kind_icons.Interface = "ﰮ "
lvim.builtin.cmp.formatting.kind_icons.Keyword = " "
lvim.builtin.cmp.formatting.kind_icons.Method = " "
lvim.builtin.cmp.formatting.kind_icons.Module = " "
lvim.builtin.cmp.formatting.kind_icons.Operator = ""
lvim.builtin.cmp.formatting.kind_icons.Property = " "
lvim.builtin.cmp.formatting.kind_icons.Reference = " "
lvim.builtin.cmp.formatting.kind_icons.Snippet = " "
lvim.builtin.cmp.formatting.kind_icons.Struct = " "
lvim.builtin.cmp.formatting.kind_icons.Text = " "
lvim.builtin.cmp.formatting.kind_icons.TypeParameter = " "
lvim.builtin.cmp.formatting.kind_icons.Unit = "塞"
lvim.builtin.cmp.formatting.kind_icons.Value = " "
lvim.builtin.cmp.formatting.kind_icons.Variable = " "
lvim.builtin.cmp.formatting.source_names.buffer = "(Buffer)"
lvim.builtin.cmp.formatting.source_names.calc = "(Calc)"
lvim.builtin.cmp.formatting.source_names.cmp_tabnine = "(Tabnine)"
lvim.builtin.cmp.formatting.source_names.copilot = "(Cop)"
lvim.builtin.cmp.formatting.source_names.emoji = "(Emoji)"
lvim.builtin.cmp.formatting.source_names.luasnip = "(Snippet)"
lvim.builtin.cmp.formatting.source_names.nvim_lsp = "(LSP)"
lvim.builtin.cmp.formatting.source_names.path = "(Path)"
lvim.builtin.cmp.formatting.source_names.vsnip = "(Snippet)"
lvim.builtin.cmp.sources["1"].name = "nvim_lsp"
lvim.builtin.cmp.sources["10"].name = "crates"
lvim.builtin.cmp.sources["11"].name = "copilot"
lvim.builtin.cmp.sources["2"].name = "path"
lvim.builtin.cmp.sources["3"].name = "luasnip"
lvim.builtin.cmp.sources["4"].name = "cmp_tabnine"
lvim.builtin.cmp.sources["5"].name = "nvim_lua"
lvim.builtin.cmp.sources["6"].name = "buffer"
lvim.builtin.cmp.sources["7"].name = "calc"
lvim.builtin.cmp.sources["8"].name = "emoji"
lvim.builtin.cmp.sources["9"].name = "treesitter"
lvim.builtin.comment.active = true
lvim.builtin.comment.ignore = "^$"
lvim.builtin.comment.mappings.basic = true
lvim.builtin.comment.mappings.extra = false
lvim.builtin.comment.opleader.block = "gb"
lvim.builtin.comment.opleader.line = "gc"
lvim.builtin.comment.padding = true
lvim.builtin.comment.toggler.block = "gbc"
lvim.builtin.comment.toggler.line = "gcc"
lvim.builtin.dap.active = true
lvim.builtin.dap.breakpoint.linehl = ""
lvim.builtin.dap.breakpoint.numhl = ""
lvim.builtin.dap.breakpoint.text = ""
lvim.builtin.dap.breakpoint.texthl = "LspDiagnosticsSignError"
lvim.builtin.dap.breakpoint_rejected.linehl = ""
lvim.builtin.dap.breakpoint_rejected.numhl = ""
lvim.builtin.dap.breakpoint_rejected.text = ""
lvim.builtin.dap.breakpoint_rejected.texthl = "LspDiagnosticsSignHint"
lvim.builtin.dap.stopped.linehl = "DiagnosticUnderlineInfo"
lvim.builtin.dap.stopped.numhl = "LspDiagnosticsSignInformation"
lvim.builtin.dap.stopped.text = ""
lvim.builtin.dap.stopped.texthl = "LspDiagnosticsSignInformation"
lvim.builtin.dashboard.active = true
lvim.builtin.dashboard.custom_header["1"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["10"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠈⠁⠒⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["11"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣇⠀⠀⠀⠀⠀⠀⠉⠢⠤⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡟⠈⠑⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["12"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠑⠒⠤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡇⠀⠀⢀⣣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["13"] =
  "⠀⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠒⠢⠤⠄⣀⣀⠀⠀⠀⢠⣿⡟⠀⠀⠀⣺⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["14"] =
  "⠀⣿⠇⠀⠀⠀⠀⠀⣤⡄⠀⠀⢠⣤⡄⠀⢨⣭⣠⣤⣤⣤⡀⠀⠀⢀⣤⣤⣤⣤⡄⠀⠀⠀⣤⣄⣤⣤⣤⠀⠀⣿⣯⠉⠉⣿⡟⠀⠈⢩⣭⣤⣤⠀⠀⠀⠀⣠⣤⣤⣤⣄⣤⣤"
lvim.builtin.dashboard.custom_header["15"] =
  "⢠⣿⠀⠀⠀⠀⠀⠀⣿⠃⠀⠀⣸⣿⠁⠀⣿⣿⠉⠀⠈⣿⡇⠀⠀⠛⠋⠀⠀⢹⣿⠀⠀⠀⣿⠏⠀⠸⠿⠃⠀⣿⣿⠀⣰⡟⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⣿⡟⢸⣿⡇⢀⣿"
lvim.builtin.dashboard.custom_header["16"] =
  "⣸⡇⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⣿⡟⠀⢠⣿⡇⠀⠀⢰⣿⡇⠀⣰⣾⠟⠛⠛⣻⡇⠀⠀⢸⡿⠀⠀⠀⠀⠀⠀⢻⣿⢰⣿⠀⠀⠀⠀⠀⠀⣾⡇⠀⠀⠀⢸⣿⠇⢸⣿⠀⢸⡏"
lvim.builtin.dashboard.custom_header["17"] =
  "⣿⣧⣤⣤⣤⡄⠀⠘⣿⣤⣤⡤⣿⠇⠀⢸⣿⠁⠀⠀⣼⣿⠀⠀⢿⣿⣤⣤⠔⣿⠃⠀⠀⣾⡇⠀⠀⠀⠀⠀⠀⢸⣿⣿⠋⠀⠀⠀⢠⣤⣤⣿⣥⣤⡄⠀⣼⣿⠀⣸⡏⠀⣿⠃"
lvim.builtin.dashboard.custom_header["18"] =
  "⠉⠉⠉⠉⠉⠁⠀⠀⠈⠉⠉⠀⠉⠀⠀⠈⠉⠀⠀⠀⠉⠉⠀⠀⠀⠉⠉⠁⠈⠉⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠁⠀⠉⠁⠀⠉⠁⠀⠉⠀"
lvim.builtin.dashboard.custom_header["2"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣶⣾⠿⠿⠟⠛⠛⠛⠛⠿⠿⣿⣷⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["3"] =
  "  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⡿⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠿⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["4"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["5"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠂⠉⠉⠉⠉⢩⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["6"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⢰⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["7"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠠⡀⠀⠀⢀⣾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["8"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⢀⣸⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_header["9"] =
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡧⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.dashboard.custom_section.a.command = "Telescope find_files"
lvim.builtin.dashboard.custom_section.a.description["1"] = "  Find File          "
lvim.builtin.dashboard.custom_section.b.command = ":ene!"
lvim.builtin.dashboard.custom_section.b.description["1"] = "  New File           "
lvim.builtin.dashboard.custom_section.c.command = "Telescope projects"
lvim.builtin.dashboard.custom_section.c.description["1"] = "  Recent Projects    "
lvim.builtin.dashboard.custom_section.d.command = "Telescope oldfiles"
lvim.builtin.dashboard.custom_section.d.description["1"] = "  Recently Used Files"
lvim.builtin.dashboard.custom_section.e.command = "Telescope live_grep"
lvim.builtin.dashboard.custom_section.e.description["1"] = "  Find Word          "
lvim.builtin.dashboard.custom_section.f.command = ":e /Users/dmr/.config/lvim/config.lua"
lvim.builtin.dashboard.custom_section.f.description["1"] = "  Configuration      "
lvim.builtin.dashboard.disable_at_vim_enter = 0
lvim.builtin.dashboard.footer["1"] = "lunarvim.org"
lvim.builtin.dashboard.search_handler = "telescope"
lvim.builtin.dashboard.session_directory = "/Users/dmr/.cache/lvim/sessions"
lvim.builtin.gitsigns.active = true
lvim.builtin.gitsigns.opts.attach_to_untracked = true
lvim.builtin.gitsigns.opts.current_line_blame = false
lvim.builtin.gitsigns.opts.current_line_blame_formatter_opts.relative_time = false
lvim.builtin.gitsigns.opts.current_line_blame_opts.delay = 1000
lvim.builtin.gitsigns.opts.current_line_blame_opts.ignore_whitespace = false
lvim.builtin.gitsigns.opts.current_line_blame_opts.virt_text = true
lvim.builtin.gitsigns.opts.current_line_blame_opts.virt_text_pos = "eol"
lvim.builtin.gitsigns.opts.keymaps.buffer = true
lvim.builtin.gitsigns.opts.keymaps.noremap = true
lvim.builtin.gitsigns.opts.linehl = false
lvim.builtin.gitsigns.opts.max_file_length = 40000
lvim.builtin.gitsigns.opts.numhl = false
lvim.builtin.gitsigns.opts.preview_config.border = "rounded"
lvim.builtin.gitsigns.opts.preview_config.col = 1
lvim.builtin.gitsigns.opts.preview_config.relative = "cursor"
lvim.builtin.gitsigns.opts.preview_config.row = 0
lvim.builtin.gitsigns.opts.preview_config.style = "minimal"
lvim.builtin.gitsigns.opts.sign_priority = 6
lvim.builtin.gitsigns.opts.signcolumn = true
lvim.builtin.gitsigns.opts.signs.add.hl = "GitSignsAdd"
lvim.builtin.gitsigns.opts.signs.add.linehl = "GitSignsAddLn"
lvim.builtin.gitsigns.opts.signs.add.numhl = "GitSignsAddNr"
lvim.builtin.gitsigns.opts.signs.add.text = "▎"
lvim.builtin.gitsigns.opts.signs.change.hl = "GitSignsChange"
lvim.builtin.gitsigns.opts.signs.change.linehl = "GitSignsChangeLn"
lvim.builtin.gitsigns.opts.signs.change.numhl = "GitSignsChangeNr"
lvim.builtin.gitsigns.opts.signs.change.text = "▎"
lvim.builtin.gitsigns.opts.signs.changedelete.hl = "GitSignsChange"
lvim.builtin.gitsigns.opts.signs.changedelete.linehl = "GitSignsChangeLn"
lvim.builtin.gitsigns.opts.signs.changedelete.numhl = "GitSignsChangeNr"
lvim.builtin.gitsigns.opts.signs.changedelete.text = "▎"
lvim.builtin.gitsigns.opts.signs.delete.hl = "GitSignsDelete"
lvim.builtin.gitsigns.opts.signs.delete.linehl = "GitSignsDeleteLn"
lvim.builtin.gitsigns.opts.signs.delete.numhl = "GitSignsDeleteNr"
lvim.builtin.gitsigns.opts.signs.delete.text = "契"
lvim.builtin.gitsigns.opts.signs.topdelete.hl = "GitSignsDelete"
lvim.builtin.gitsigns.opts.signs.topdelete.linehl = "GitSignsDeleteLn"
lvim.builtin.gitsigns.opts.signs.topdelete.numhl = "GitSignsDeleteNr"
lvim.builtin.gitsigns.opts.signs.topdelete.text = "契"
lvim.builtin.gitsigns.opts.update_debounce = 200
lvim.builtin.gitsigns.opts.watch_gitdir.follow_files = true
lvim.builtin.gitsigns.opts.watch_gitdir.interval = 1000
lvim.builtin.gitsigns.opts.word_diff = false
lvim.builtin.lualine.active = true
lvim.builtin.lualine.extensions["1"] = "nvim-tree"
lvim.builtin.lualine.inactive_sections.lualine_a["1"] = "filename"
lvim.builtin.lualine.options.component_separators.left = ""
lvim.builtin.lualine.options.component_separators.right = ""
lvim.builtin.lualine.options.disabled_filetypes["1"] = "dashboard"
lvim.builtin.lualine.options.disabled_filetypes["2"] = "NvimTree"
lvim.builtin.lualine.options.disabled_filetypes["3"] = "Outline"
lvim.builtin.lualine.options.icons_enabled = true
lvim.builtin.lualine.options.section_separators.left = ""
lvim.builtin.lualine.options.section_separators.right = ""
lvim.builtin.lualine.options.theme = "onedarker"
lvim.builtin.lualine.sections.lualine_a["1"].padding.left = 0
lvim.builtin.lualine.sections.lualine_a["1"].padding.right = 0
lvim.builtin.lualine.sections.lualine_b["1"].color.gui = "bold"
lvim.builtin.lualine.sections.lualine_b["1"].icon = " "
lvim.builtin.lualine.sections.lualine_b["1"]["1"] = "b:gitsigns_head"
lvim.builtin.lualine.sections.lualine_b["2"]["1"] = "filename"
lvim.builtin.lualine.sections.lualine_c["1"].diff_color.added.fg = "#98be65"
lvim.builtin.lualine.sections.lualine_c["1"].diff_color.modified.fg = "#ECBE7B"
lvim.builtin.lualine.sections.lualine_c["1"].diff_color.removed.fg = "#ec5f67"
lvim.builtin.lualine.sections.lualine_c["1"].symbols.added = "  "
lvim.builtin.lualine.sections.lualine_c["1"].symbols.modified = " "
lvim.builtin.lualine.sections.lualine_c["1"].symbols.removed = " "
lvim.builtin.lualine.sections.lualine_c["1"]["1"] = "diff"
lvim.builtin.lualine.sections.lualine_c["2"].color.fg = "#98be65"
lvim.builtin.lualine.sections.lualine_x["1"].sources["1"] = "nvim_diagnostic"
lvim.builtin.lualine.sections.lualine_x["1"].symbols.error = " "
lvim.builtin.lualine.sections.lualine_x["1"].symbols.hint = " "
lvim.builtin.lualine.sections.lualine_x["1"].symbols.info = " "
lvim.builtin.lualine.sections.lualine_x["1"].symbols.warn = " "
lvim.builtin.lualine.sections.lualine_x["1"]["1"] = "diagnostics"
lvim.builtin.lualine.sections.lualine_x["2"].color.fg = "#98be65"
lvim.builtin.lualine.sections.lualine_x["3"].color.gui = "bold"
lvim.builtin.lualine.sections.lualine_x["4"]["1"] = "filetype"
lvim.builtin.lualine.sections.lualine_y["1"] = "location"
lvim.builtin.lualine.sections.lualine_z["1"].color.bg = "#202328"
lvim.builtin.lualine.sections.lualine_z["1"].color.fg = "#ECBE7B"
lvim.builtin.lualine.sections.lualine_z["1"].padding.left = 0
lvim.builtin.lualine.sections.lualine_z["1"].padding.right = 0
lvim.builtin.lualine.style = "lvim"
lvim.builtin.notify.active = true
lvim.builtin.notify.opts.background_colour = "Normal"
lvim.builtin.notify.opts.icons.DEBUG = ""
lvim.builtin.notify.opts.icons.ERROR = ""
lvim.builtin.notify.opts.icons.INFO = ""
lvim.builtin.notify.opts.icons.TRACE = "✎"
lvim.builtin.notify.opts.icons.WARN = ""
lvim.builtin.notify.opts.minimum_width = 50
lvim.builtin.notify.opts.render = "default"
lvim.builtin.notify.opts.stages = "slide"
lvim.builtin.notify.opts.timeout = 5000
lvim.builtin.nvimtree.active = true
lvim.builtin.nvimtree.disable_window_picker = 0
lvim.builtin.nvimtree.git_hl = 1
lvim.builtin.nvimtree.icons.default = ""
lvim.builtin.nvimtree.icons.folder.default = ""
lvim.builtin.nvimtree.icons.folder.empty = ""
lvim.builtin.nvimtree.icons.folder.empty_open = ""
lvim.builtin.nvimtree.icons.folder.open = ""
lvim.builtin.nvimtree.icons.folder.symlink = ""
lvim.builtin.nvimtree.icons.git.deleted = ""
lvim.builtin.nvimtree.icons.git.ignored = "◌"
lvim.builtin.nvimtree.icons.git.renamed = "➜"
lvim.builtin.nvimtree.icons.git.staged = "S"
lvim.builtin.nvimtree.icons.git.unmerged = ""
lvim.builtin.nvimtree.icons.git.unstaged = ""
lvim.builtin.nvimtree.icons.git.untracked = "U"
lvim.builtin.nvimtree.icons.symlink = ""
lvim.builtin.nvimtree.quit_on_open = 0
lvim.builtin.nvimtree.respect_buf_cwd = 1
lvim.builtin.nvimtree.root_folder_modifier = ":t"
lvim.builtin.nvimtree.setup.auto_close = false
lvim.builtin.nvimtree.setup.diagnostics.enable = true
lvim.builtin.nvimtree.setup.diagnostics.icons.error = ""
lvim.builtin.nvimtree.setup.diagnostics.icons.hint = ""
lvim.builtin.nvimtree.setup.diagnostics.icons.info = ""
lvim.builtin.nvimtree.setup.diagnostics.icons.warning = ""
lvim.builtin.nvimtree.setup.disable_netrw = false
lvim.builtin.nvimtree.setup.filters.custom["1"] = "node_modules"
lvim.builtin.nvimtree.setup.filters.custom["2"] = ".cache"
lvim.builtin.nvimtree.setup.filters.dotfiles = false
lvim.builtin.nvimtree.setup.git.enable = true
lvim.builtin.nvimtree.setup.git.ignore = false
lvim.builtin.nvimtree.setup.git.timeout = 200
lvim.builtin.nvimtree.setup.hijack_cursor = false
lvim.builtin.nvimtree.setup.hijack_netrw = false
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["1"] = "startify"
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["2"] = "dashboard"
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["3"] = "alpha"
lvim.builtin.nvimtree.setup.open_on_setup = false
lvim.builtin.nvimtree.setup.open_on_tab = false
lvim.builtin.nvimtree.setup.trash.cmd = "trash"
lvim.builtin.nvimtree.setup.trash.require_confirm = true
lvim.builtin.nvimtree.setup.update_cwd = true
lvim.builtin.nvimtree.setup.update_focused_file.enable = true
lvim.builtin.nvimtree.setup.update_focused_file.update_cwd = true
lvim.builtin.nvimtree.setup.update_to_buf_dir.auto_open = true
lvim.builtin.nvimtree.setup.update_to_buf_dir.enable = true
lvim.builtin.nvimtree.setup.view.auto_resize = false
lvim.builtin.nvimtree.setup.view.height = 30
lvim.builtin.nvimtree.setup.view.hide_root_folder = false
lvim.builtin.nvimtree.setup.view.mappings.custom_only = false
lvim.builtin.nvimtree.setup.view.mappings.list["1"].cb = ":lua require'nvim-tree.actions'.on_keypress('edit')<CR>"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["1"] = "l"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["2"] = "<CR>"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["3"] = "o"
lvim.builtin.nvimtree.setup.view.mappings.list["2"].cb = ":lua require'nvim-tree.actions'.on_keypress('close_node')<CR>"
lvim.builtin.nvimtree.setup.view.mappings.list["2"].key = "h"
lvim.builtin.nvimtree.setup.view.mappings.list["3"].cb = ":lua require'nvim-tree.actions'.on_keypress('vsplit')<CR>"
lvim.builtin.nvimtree.setup.view.mappings.list["3"].key = "v"
lvim.builtin.nvimtree.setup.view.mappings.list["4"].cb = ":lua require'nvim-tree.actions'.on_keypress('cd')<CR>"
lvim.builtin.nvimtree.setup.view.mappings.list["4"].key = "C"
lvim.builtin.nvimtree.setup.view.mappings.list["5"].cb =
  "<cmd>lua require'lvim.core.nvimtree'.start_telescope('find_files')<cr>"
lvim.builtin.nvimtree.setup.view.mappings.list["5"].key = "gtf"
lvim.builtin.nvimtree.setup.view.mappings.list["6"].cb =
  "<cmd>lua require'lvim.core.nvimtree'.start_telescope('live_grep')<cr>"
lvim.builtin.nvimtree.setup.view.mappings.list["6"].key = "gtg"
lvim.builtin.nvimtree.setup.view.number = false
lvim.builtin.nvimtree.setup.view.relativenumber = false
lvim.builtin.nvimtree.setup.view.side = "left"
lvim.builtin.nvimtree.setup.view.signcolumn = "yes"
lvim.builtin.nvimtree.setup.view.width = 30
lvim.builtin.nvimtree.show_icons.files = 1
lvim.builtin.nvimtree.show_icons.folder_arrows = 1
lvim.builtin.nvimtree.show_icons.folders = 1
lvim.builtin.nvimtree.show_icons.git = 1
lvim.builtin.nvimtree.show_icons.tree_width = 30
lvim.builtin.project.active = true
lvim.builtin.project.datapath = "/Users/dmr/.cache/lvim"
lvim.builtin.project.detection_methods["1"] = "pattern"
lvim.builtin.project.manual_mode = false
lvim.builtin.project.patterns["1"] = ".git"
lvim.builtin.project.patterns["2"] = "_darcs"
lvim.builtin.project.patterns["3"] = ".hg"
lvim.builtin.project.patterns["4"] = ".bzr"
lvim.builtin.project.patterns["5"] = ".svn"
lvim.builtin.project.patterns["6"] = "Makefile"
lvim.builtin.project.patterns["7"] = "package.json"
lvim.builtin.project.show_hidden = false
lvim.builtin.project.silent_chdir = true
lvim.builtin.sell_soul_to_devel = true
lvim.builtin.telescope.active = true
lvim.builtin.telescope.defaults.borderchars["1"] = "─"
lvim.builtin.telescope.defaults.borderchars["2"] = "│"
lvim.builtin.telescope.defaults.borderchars["3"] = "─"
lvim.builtin.telescope.defaults.borderchars["4"] = "│"
lvim.builtin.telescope.defaults.borderchars["5"] = "╭"
lvim.builtin.telescope.defaults.borderchars["6"] = "╮"
lvim.builtin.telescope.defaults.borderchars["7"] = "╯"
lvim.builtin.telescope.defaults.borderchars["8"] = "╰"
lvim.builtin.telescope.defaults.color_devicons = true
lvim.builtin.telescope.defaults.entry_prefix = "  "
lvim.builtin.telescope.defaults.initial_mode = "insert"
lvim.builtin.telescope.defaults.layout_config.horizontal.mirror = false
lvim.builtin.telescope.defaults.layout_config.preview_cutoff = 120
lvim.builtin.telescope.defaults.layout_config.vertical.mirror = false
lvim.builtin.telescope.defaults.layout_config.width = 0.75
lvim.builtin.telescope.defaults.layout_strategy = "horizontal"
lvim.builtin.telescope.defaults.mappings.i["<C-j>"]["1"] = "move_selection_next"
lvim.builtin.telescope.defaults.mappings.i["<C-k>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.defaults.mappings.i["<C-n>"]["1"] = "cycle_history_next"
lvim.builtin.telescope.defaults.mappings.i["<C-p>"]["1"] = "cycle_history_prev"
lvim.builtin.telescope.defaults.mappings.n["<C-j>"]["1"] = "move_selection_next"
lvim.builtin.telescope.defaults.mappings.n["<C-k>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.defaults.path_display.shorten = 5
lvim.builtin.telescope.defaults.pickers.find_files.find_command["1"] = "fd"
lvim.builtin.telescope.defaults.pickers.find_files.find_command["2"] = "--type=file"
lvim.builtin.telescope.defaults.pickers.find_files.find_command["3"] = "--hidden"
lvim.builtin.telescope.defaults.pickers.find_files.find_command["4"] = "--smart-case"
lvim.builtin.telescope.defaults.pickers.live_grep.only_sort_text = true
lvim.builtin.telescope.defaults.prompt_prefix = " "
lvim.builtin.telescope.defaults.selection_caret = " "
lvim.builtin.telescope.defaults.selection_strategy = "reset"
lvim.builtin.telescope.defaults.set_env.COLORTERM = "truecolor"
lvim.builtin.telescope.defaults.sorting_strategy = "descending"
lvim.builtin.telescope.defaults.vimgrep_arguments["1"] = "rg"
lvim.builtin.telescope.defaults.vimgrep_arguments["2"] = "--color=never"
lvim.builtin.telescope.defaults.vimgrep_arguments["3"] = "--no-heading"
lvim.builtin.telescope.defaults.vimgrep_arguments["4"] = "--with-filename"
lvim.builtin.telescope.defaults.vimgrep_arguments["5"] = "--line-number"
lvim.builtin.telescope.defaults.vimgrep_arguments["6"] = "--column"
lvim.builtin.telescope.defaults.vimgrep_arguments["7"] = "--smart-case"
lvim.builtin.telescope.defaults.vimgrep_arguments["8"] = "--hidden"
lvim.builtin.telescope.defaults.vimgrep_arguments["9"] = "--glob=!.git/"
lvim.builtin.telescope.defaults.winblend = 0
lvim.builtin.telescope.extensions.fzf.case_mode = "smart_case"
lvim.builtin.telescope.extensions.fzf.fuzzy = true
lvim.builtin.telescope.extensions.fzf.override_file_sorter = true
lvim.builtin.telescope.extensions.fzf.override_generic_sorter = true
lvim.builtin.telescope.mappings.i["<C-c>"]["1"] = "close"
lvim.builtin.telescope.mappings.i["<C-j>"]["1"] = "cycle_history_next"
lvim.builtin.telescope.mappings.i["<C-k>"]["1"] = "cycle_history_prev"
lvim.builtin.telescope.mappings.i["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.mappings.i["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.mappings.i["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.mappings.i["<C-q>"]["2"] = "open_qflist"
lvim.builtin.telescope.mappings.i["<CR>"]["1"] = "select_default"
lvim.builtin.telescope.mappings.i["<CR>"]["2"] = "center"
lvim.builtin.telescope.mappings.n["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.mappings.n["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.mappings.n["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.mappings.n["<C-q>"]["2"] = "open_qflist"
lvim.builtin.terminal.active = true
lvim.builtin.terminal.close_on_exit = true
lvim.builtin.terminal.direction = "float"
lvim.builtin.terminal.execs["1"]["1"] = "lazygit"
lvim.builtin.terminal.execs["1"]["2"] = "<leader>gg"
lvim.builtin.terminal.execs["1"]["3"] = "LazyGit"
lvim.builtin.terminal.execs["1"]["4"] = "float"
lvim.builtin.terminal.execs["2"]["1"] = "lazygit"
lvim.builtin.terminal.execs["2"]["2"] = "<c-\\><c-g>"
lvim.builtin.terminal.execs["2"]["3"] = "LazyGit"
lvim.builtin.terminal.execs["2"]["4"] = "float"
lvim.builtin.terminal.float_opts.border = "curved"
lvim.builtin.terminal.float_opts.highlights.background = "Normal"
lvim.builtin.terminal.float_opts.highlights.border = "Normal"
lvim.builtin.terminal.float_opts.winblend = 0
lvim.builtin.terminal.hide_numbers = true
lvim.builtin.terminal.insert_mappings = true
lvim.builtin.terminal.open_mapping = "<c-t>"
lvim.builtin.terminal.persist_size = false
lvim.builtin.terminal.shade_terminals = true
lvim.builtin.terminal.shading_factor = 2
lvim.builtin.terminal.shell = "/opt/homebrew/bin/bash"
lvim.builtin.terminal.size = 20
lvim.builtin.terminal.start_in_insert = true
lvim.builtin.treesitter.autotag.enable = false
lvim.builtin.treesitter.context_commentstring.config.css = "/* %s */"
lvim.builtin.treesitter.context_commentstring.config.html = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.config.json = ""
lvim.builtin.treesitter.context_commentstring.config.scss = "/* %s */"
lvim.builtin.treesitter.context_commentstring.config.svelte = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.config.typescript = "// %s"
lvim.builtin.treesitter.context_commentstring.config.vue = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.enable = true
lvim.builtin.treesitter.ensure_installed["1"] = "bash"
lvim.builtin.treesitter.ensure_installed["10"] = "java"
lvim.builtin.treesitter.ensure_installed["11"] = "yaml"
lvim.builtin.treesitter.ensure_installed["2"] = "c"
lvim.builtin.treesitter.ensure_installed["3"] = "javascript"
lvim.builtin.treesitter.ensure_installed["4"] = "json"
lvim.builtin.treesitter.ensure_installed["5"] = "lua"
lvim.builtin.treesitter.ensure_installed["6"] = "python"
lvim.builtin.treesitter.ensure_installed["7"] = "typescript"
lvim.builtin.treesitter.ensure_installed["8"] = "css"
lvim.builtin.treesitter.ensure_installed["9"] = "rust"
lvim.builtin.treesitter.highlight.additional_vim_regex_highlighting = true
lvim.builtin.treesitter.highlight.disable["1"] = "latex"
lvim.builtin.treesitter.highlight.enable = true
lvim.builtin.treesitter.highlight.enabled = true
lvim.builtin.treesitter.ignore_install["1"] = "haskell"
lvim.builtin.treesitter.indent.disable["1"] = "yaml"
lvim.builtin.treesitter.indent.enable = true
lvim.builtin.treesitter.matchup.enable = false
lvim.builtin.treesitter.playground.enable = false
lvim.builtin.treesitter.playground.keybindings.focus_language = "f"
lvim.builtin.treesitter.playground.keybindings.goto_node = "<cr>"
lvim.builtin.treesitter.playground.keybindings.show_help = "?"
lvim.builtin.treesitter.playground.keybindings.toggle_anonymous_nodes = "a"
lvim.builtin.treesitter.playground.keybindings.toggle_hl_groups = "i"
lvim.builtin.treesitter.playground.keybindings.toggle_injected_languages = "t"
lvim.builtin.treesitter.playground.keybindings.toggle_language_display = "I"
lvim.builtin.treesitter.playground.keybindings.toggle_query_editor = "o"
lvim.builtin.treesitter.playground.keybindings.unfocus_language = "F"
lvim.builtin.treesitter.playground.keybindings.update = "R"
lvim.builtin.treesitter.playground.persist_queries = false
lvim.builtin.treesitter.playground.updatetime = 25
lvim.builtin.treesitter.rainbow.enable = false
lvim.builtin.treesitter.rainbow.extended_mode = true
lvim.builtin.treesitter.rainbow.max_file_lines = 1000
lvim.builtin.treesitter.textobjects.select.enable = false
lvim.builtin.treesitter.textobjects.swap.enable = false
lvim.builtin.treesitter.textsubjects.enable = false
lvim.builtin.treesitter.textsubjects.keymaps["."] = "textsubjects-smart"
lvim.builtin.treesitter.textsubjects.keymaps[";"] = "textsubjects-big"
lvim.builtin.which_key.active = true
lvim.builtin.which_key.mappings.L.I["1"] =
  "<cmd>lua require('lvim.core.telescope.custom-finders').view_lunarvim_changelog()<cr>"
lvim.builtin.which_key.mappings.L.I["2"] = "View LunarVim's changelog"
lvim.builtin.which_key.mappings.L.c["1"] = "<cmd>edit /Users/dmr/.config/lvim/config.lua<cr>"
lvim.builtin.which_key.mappings.L.c["2"] = "Edit config.lua"
lvim.builtin.which_key.mappings.L.f["1"] =
  "<cmd>lua require('lvim.core.telescope.custom-finders').find_lunarvim_files()<cr>"
lvim.builtin.which_key.mappings.L.f["2"] = "Find LunarVim files"
lvim.builtin.which_key.mappings.L.g["1"] =
  "<cmd>lua require('lvim.core.telescope.custom-finders').grep_lunarvim_files()<cr>"
lvim.builtin.which_key.mappings.L.g["2"] = "Grep LunarVim files"
lvim.builtin.which_key.mappings.L.i["1"] = "<cmd>lua require('lvim.core.info').toggle_popup(vim.bo.filetype)<cr>"
lvim.builtin.which_key.mappings.L.i["2"] = "Toggle LunarVim Info"
lvim.builtin.which_key.mappings.L.k["1"] = "<cmd>Telescope keymaps<cr>"
lvim.builtin.which_key.mappings.L.k["2"] = "View LunarVim's keymappings"
lvim.builtin.which_key.mappings.L.l.D["1"] =
  "<cmd>lua vim.fn.execute('edit ' .. require('lvim.core.log').get_path())<cr>"
lvim.builtin.which_key.mappings.L.l.D["2"] = "Open the default logfile"
lvim.builtin.which_key.mappings.L.l.L["1"] = "<cmd>lua vim.fn.execute('edit ' .. vim.lsp.get_log_path())<cr>"
lvim.builtin.which_key.mappings.L.l.L["2"] = "Open the LSP logfile"
lvim.builtin.which_key.mappings.L.l.N["1"] = "<cmd>edit $NVIM_LOG_FILE<cr>"
lvim.builtin.which_key.mappings.L.l.N["2"] = "Open the Neovim logfile"
lvim.builtin.which_key.mappings.L.l.P["1"] = "<cmd>exe 'edit '.stdpath('cache').'/packer.nvim.log'<cr>"
lvim.builtin.which_key.mappings.L.l.P["2"] = "Open the Packer logfile"
lvim.builtin.which_key.mappings.L.l.d["1"] =
  "<cmd>lua require('lvim.core.terminal').toggle_log_view(require('lvim.core.log').get_path())<cr>"
lvim.builtin.which_key.mappings.L.l.d["2"] = "view default log"
lvim.builtin.which_key.mappings.L.l.l["1"] =
  "<cmd>lua require('lvim.core.terminal').toggle_log_view(vim.lsp.get_log_path())<cr>"
lvim.builtin.which_key.mappings.L.l.l["2"] = "view lsp log"
lvim.builtin.which_key.mappings.L.l.n["1"] =
  "<cmd>lua require('lvim.core.terminal').toggle_log_view(os.getenv('NVIM_LOG_FILE'))<cr>"
lvim.builtin.which_key.mappings.L.l.n["2"] = "view neovim log"
lvim.builtin.which_key.mappings.L.l.name = "+logs"
lvim.builtin.which_key.mappings.L.l.p["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view('packer.nvim')<cr>"
lvim.builtin.which_key.mappings.L.l.p["2"] = "view packer log"
lvim.builtin.which_key.mappings.L.name = "+LunarVim"
lvim.builtin.which_key.mappings.L.r["1"] = "<cmd>LvimReload<cr>"
lvim.builtin.which_key.mappings.L.r["2"] = "Reload LunarVim's configuration"
lvim.builtin.which_key.mappings.L.u["1"] = "<cmd>LvimUpdate<cr>"
lvim.builtin.which_key.mappings.L.u["2"] = "Update LunarVim"
lvim.builtin.which_key.mappings.P["1"] = "<cmd>Telescope projects<CR>"
lvim.builtin.which_key.mappings.P["2"] = "Projects"
lvim.builtin.which_key.mappings.T.i["1"] = ":TSConfigInfo<cr>"
lvim.builtin.which_key.mappings.T.i["2"] = "Info"
lvim.builtin.which_key.mappings.T.name = "Treesitter"
lvim.builtin.which_key.mappings.b.D["1"] = "<cmd>BufferLineSortByDirectory<cr>"
lvim.builtin.which_key.mappings.b.D["2"] = "Sort by directory"
lvim.builtin.which_key.mappings.b.L["1"] = "<cmd>BufferLineSortByExtension<cr>"
lvim.builtin.which_key.mappings.b.L["2"] = "Sort by language"
lvim.builtin.which_key.mappings.b.b["1"] = "<cmd>BufferLineCyclePrev<cr>"
lvim.builtin.which_key.mappings.b.b["2"] = "Previous"
lvim.builtin.which_key.mappings.b.e["1"] = "<cmd>BufferLinePickClose<cr>"
lvim.builtin.which_key.mappings.b.e["2"] = "Pick which buffer to close"
lvim.builtin.which_key.mappings.b.f["1"] = "<cmd>Telescope buffers<cr>"
lvim.builtin.which_key.mappings.b.f["2"] = "Find"
lvim.builtin.which_key.mappings.b.h["1"] = "<cmd>BufferLineCloseLeft<cr>"
lvim.builtin.which_key.mappings.b.h["2"] = "Close all to the left"
lvim.builtin.which_key.mappings.b.j["1"] = "<cmd>BufferLinePick<cr>"
lvim.builtin.which_key.mappings.b.j["2"] = "Jump"
lvim.builtin.which_key.mappings.b.l["1"] = "<cmd>BufferLineCloseRight<cr>"
lvim.builtin.which_key.mappings.b.l["2"] = "Close all to the right"
lvim.builtin.which_key.mappings.b.name = "Buffers"
lvim.builtin.which_key.mappings.c["1"] = "<cmd>bdelete!<CR>"
lvim.builtin.which_key.mappings.c["2"] = "Close Buffer"
lvim.builtin.which_key.mappings.d.C["1"] = "<cmd>lua require'dap'.run_to_cursor()<cr>"
lvim.builtin.which_key.mappings.d.C["2"] = "Run To Cursor"
lvim.builtin.which_key.mappings.d.b["1"] = "<cmd>lua require'dap'.step_back()<cr>"
lvim.builtin.which_key.mappings.d.b["2"] = "Step Back"
lvim.builtin.which_key.mappings.d.c["1"] = "<cmd>lua require'dap'.continue()<cr>"
lvim.builtin.which_key.mappings.d.c["2"] = "Continue"
lvim.builtin.which_key.mappings.d.d["1"] = "<cmd>lua require'dap'.disconnect()<cr>"
lvim.builtin.which_key.mappings.d.d["2"] = "Disconnect"
lvim.builtin.which_key.mappings.d.g["1"] = "<cmd>lua require'dap'.session()<cr>"
lvim.builtin.which_key.mappings.d.g["2"] = "Get Session"
lvim.builtin.which_key.mappings.d.i["1"] = "<cmd>lua require'dap'.step_into()<cr>"
lvim.builtin.which_key.mappings.d.i["2"] = "Step Into"
lvim.builtin.which_key.mappings.d.name = "Debug"
lvim.builtin.which_key.mappings.d.o["1"] = "<cmd>lua require'dap'.step_over()<cr>"
lvim.builtin.which_key.mappings.d.o["2"] = "Step Over"
lvim.builtin.which_key.mappings.d.p["1"] = "<cmd>lua require'dap'.pause.toggle()<cr>"
lvim.builtin.which_key.mappings.d.p["2"] = "Pause"
lvim.builtin.which_key.mappings.d.q["1"] = "<cmd>lua require'dap'.close()<cr>"
lvim.builtin.which_key.mappings.d.q["2"] = "Quit"
lvim.builtin.which_key.mappings.d.r["1"] = "<cmd>lua require'dap'.repl.toggle()<cr>"
lvim.builtin.which_key.mappings.d.r["2"] = "Toggle Repl"
lvim.builtin.which_key.mappings.d.s["1"] = "<cmd>lua require'dap'.continue()<cr>"
lvim.builtin.which_key.mappings.d.s["2"] = "Start"
lvim.builtin.which_key.mappings.d.t["1"] = "<cmd>lua require'dap'.toggle_breakpoint()<cr>"
lvim.builtin.which_key.mappings.d.t["2"] = "Toggle Breakpoint"
lvim.builtin.which_key.mappings.d.u["1"] = "<cmd>lua require'dap'.step_out()<cr>"
lvim.builtin.which_key.mappings.d.u["2"] = "Step Out"
lvim.builtin.which_key.mappings.e["1"] = "<cmd>NvimTreeToggle<CR>"
lvim.builtin.which_key.mappings.e["2"] = "Explorer"
lvim.builtin.which_key.mappings.f["2"] = "Find File"
lvim.builtin.which_key.mappings.g.C["1"] = "<cmd>Telescope git_bcommits<cr>"
lvim.builtin.which_key.mappings.g.C["2"] = "Checkout commit(for current file)"
lvim.builtin.which_key.mappings.g.R["1"] = "<cmd>lua require 'gitsigns'.reset_buffer()<cr>"
lvim.builtin.which_key.mappings.g.R["2"] = "Reset Buffer"
lvim.builtin.which_key.mappings.g.b["1"] = "<cmd>Telescope git_branches<cr>"
lvim.builtin.which_key.mappings.g.b["2"] = "Checkout branch"
lvim.builtin.which_key.mappings.g.c["1"] = "<cmd>Telescope git_commits<cr>"
lvim.builtin.which_key.mappings.g.c["2"] = "Checkout commit"
lvim.builtin.which_key.mappings.g.d["1"] = "<cmd>Gitsigns diffthis HEAD<cr>"
lvim.builtin.which_key.mappings.g.d["2"] = "Git Diff"
lvim.builtin.which_key.mappings.g.j["1"] = "<cmd>lua require 'gitsigns'.next_hunk()<cr>"
lvim.builtin.which_key.mappings.g.j["2"] = "Next Hunk"
lvim.builtin.which_key.mappings.g.k["1"] = "<cmd>lua require 'gitsigns'.prev_hunk()<cr>"
lvim.builtin.which_key.mappings.g.k["2"] = "Prev Hunk"
lvim.builtin.which_key.mappings.g.l["1"] = "<cmd>lua require 'gitsigns'.blame_line()<cr>"
lvim.builtin.which_key.mappings.g.l["2"] = "Blame"
lvim.builtin.which_key.mappings.g.name = "Git"
lvim.builtin.which_key.mappings.g.o["1"] = "<cmd>Telescope git_status<cr>"
lvim.builtin.which_key.mappings.g.o["2"] = "Open changed file"
lvim.builtin.which_key.mappings.g.p["1"] = "<cmd>lua require 'gitsigns'.preview_hunk()<cr>"
lvim.builtin.which_key.mappings.g.p["2"] = "Preview Hunk"
lvim.builtin.which_key.mappings.g.r["1"] = "<cmd>lua require 'gitsigns'.reset_hunk()<cr>"
lvim.builtin.which_key.mappings.g.r["2"] = "Reset Hunk"
lvim.builtin.which_key.mappings.g.s["1"] = "<cmd>lua require 'gitsigns'.stage_hunk()<cr>"
lvim.builtin.which_key.mappings.g.s["2"] = "Stage Hunk"
lvim.builtin.which_key.mappings.g.u["1"] = "<cmd>lua require 'gitsigns'.undo_stage_hunk()<cr>"
lvim.builtin.which_key.mappings.g.u["2"] = "Undo Stage Hunk"
lvim.builtin.which_key.mappings.h["1"] = "<cmd>nohlsearch<CR>"
lvim.builtin.which_key.mappings.h["2"] = "No Highlight"
lvim.builtin.which_key.mappings.l.I["1"] = "<cmd>LspInstallInfo<cr>"
lvim.builtin.which_key.mappings.l.I["2"] = "Installer Info"
lvim.builtin.which_key.mappings.l.S["1"] = "<cmd>Telescope lsp_dynamic_workspace_symbols<cr>"
lvim.builtin.which_key.mappings.l.S["2"] = "Workspace Symbols"
lvim.builtin.which_key.mappings.l.a["1"] = "<cmd>lua require('lvim.core.telescope').code_actions()<cr>"
lvim.builtin.which_key.mappings.l.a["2"] = "Code Action"
lvim.builtin.which_key.mappings.l.d["1"] = "<cmd>Telescope diagnostics bufnr=0 theme=get_ivy<cr>"
lvim.builtin.which_key.mappings.l.d["2"] = "Buffer Diagnostics"
lvim.builtin.which_key.mappings.l.f["1"] = "<cmd>lua vim.lsp.buf.formatting()<cr>"
lvim.builtin.which_key.mappings.l.f["2"] = "Format"
lvim.builtin.which_key.mappings.l.i["1"] = "<cmd>LspInfo<cr>"
lvim.builtin.which_key.mappings.l.i["2"] = "Info"
lvim.builtin.which_key.mappings.l.j["1"] = "<cmd>lua vim.diagnostic.goto_next()<cr>"
lvim.builtin.which_key.mappings.l.j["2"] = "Next Diagnostic"
lvim.builtin.which_key.mappings.l.k["1"] = "<cmd>lua vim.diagnostic.goto_prev()<cr>"
lvim.builtin.which_key.mappings.l.k["2"] = "Prev Diagnostic"
lvim.builtin.which_key.mappings.l.l["1"] = "<cmd>lua vim.lsp.codelens.run()<cr>"
lvim.builtin.which_key.mappings.l.l["2"] = "CodeLens Action"
lvim.builtin.which_key.mappings.l.name = "LSP"
lvim.builtin.which_key.mappings.l.p.d["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('definition')<cr>"
lvim.builtin.which_key.mappings.l.p.d["2"] = "Definition"
lvim.builtin.which_key.mappings.l.p.i["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('implementation')<cr>"
lvim.builtin.which_key.mappings.l.p.i["2"] = "Implementation"
lvim.builtin.which_key.mappings.l.p.name = "Peek"
lvim.builtin.which_key.mappings.l.p.t["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('typeDefinition')<cr>"
lvim.builtin.which_key.mappings.l.p.t["2"] = "Type Definition"
lvim.builtin.which_key.mappings.l.q["1"] = "<cmd>lua vim.diagnostic.setloclist()<cr>"
lvim.builtin.which_key.mappings.l.q["2"] = "Quickfix"
lvim.builtin.which_key.mappings.l.r["1"] = "<cmd>lua vim.lsp.buf.rename()<cr>"
lvim.builtin.which_key.mappings.l.r["2"] = "Rename"
lvim.builtin.which_key.mappings.l.s["1"] = "<cmd>Telescope lsp_document_symbols<cr>"
lvim.builtin.which_key.mappings.l.s["2"] = "Document Symbols"
lvim.builtin.which_key.mappings.l.w["1"] = "<cmd>Telescope diagnostics<cr>"
lvim.builtin.which_key.mappings.l.w["2"] = "Diagnostics"
lvim.builtin.which_key.mappings.p.S["1"] = "<cmd>PackerStatus<cr>"
lvim.builtin.which_key.mappings.p.S["2"] = "Status"
lvim.builtin.which_key.mappings.p.c["1"] = "<cmd>PackerCompile<cr>"
lvim.builtin.which_key.mappings.p.c["2"] = "Compile"
lvim.builtin.which_key.mappings.p.i["1"] = "<cmd>PackerInstall<cr>"
lvim.builtin.which_key.mappings.p.i["2"] = "Install"
lvim.builtin.which_key.mappings.p.name = "Packer"
lvim.builtin.which_key.mappings.p.r["1"] = "<cmd>lua require('lvim.plugin-loader').recompile()<cr>"
lvim.builtin.which_key.mappings.p.r["2"] = "Re-compile"
lvim.builtin.which_key.mappings.p.s["1"] = "<cmd>PackerSync<cr>"
lvim.builtin.which_key.mappings.p.s["2"] = "Sync"
lvim.builtin.which_key.mappings.p.u["1"] = "<cmd>PackerUpdate<cr>"
lvim.builtin.which_key.mappings.p.u["2"] = "Update"
lvim.builtin.which_key.mappings.q["1"] = "<cmd>q!<CR>"
lvim.builtin.which_key.mappings.q["2"] = "Quit"
lvim.builtin.which_key.mappings.s.C["1"] = "<cmd>Telescope commands<cr>"
lvim.builtin.which_key.mappings.s.C["2"] = "Commands"
lvim.builtin.which_key.mappings.s.M["1"] = "<cmd>Telescope man_pages<cr>"
lvim.builtin.which_key.mappings.s.M["2"] = "Man Pages"
lvim.builtin.which_key.mappings.s.R["1"] = "<cmd>Telescope registers<cr>"
lvim.builtin.which_key.mappings.s.R["2"] = "Registers"
lvim.builtin.which_key.mappings.s.b["1"] = "<cmd>Telescope git_branches<cr>"
lvim.builtin.which_key.mappings.s.b["2"] = "Checkout branch"
lvim.builtin.which_key.mappings.s.c["1"] = "<cmd>Telescope colorscheme<cr>"
lvim.builtin.which_key.mappings.s.c["2"] = "Colorscheme"
lvim.builtin.which_key.mappings.s.f["1"] = "<cmd>Telescope find_files<cr>"
lvim.builtin.which_key.mappings.s.f["2"] = "Find File"
lvim.builtin.which_key.mappings.s.h["1"] = "<cmd>Telescope help_tags<cr>"
lvim.builtin.which_key.mappings.s.h["2"] = "Find Help"
lvim.builtin.which_key.mappings.s.k["1"] = "<cmd>Telescope keymaps<cr>"
lvim.builtin.which_key.mappings.s.k["2"] = "Keymaps"
lvim.builtin.which_key.mappings.s.name = "Search"
lvim.builtin.which_key.mappings.s.p["1"] =
  "<cmd>lua require('telescope.builtin.internal').colorscheme({enable_preview = true})<cr>"
lvim.builtin.which_key.mappings.s.p["2"] = "Colorscheme with Preview"
lvim.builtin.which_key.mappings.s.r["1"] = "<cmd>Telescope oldfiles<cr>"
lvim.builtin.which_key.mappings.s.r["2"] = "Open Recent File"
lvim.builtin.which_key.mappings.s.t["1"] = "<cmd>Telescope live_grep<cr>"
lvim.builtin.which_key.mappings.s.t["2"] = "Text"
lvim.builtin.which_key.mappings.t.d["1"] = "<cmd>Trouble lsp_document_diagnostics<cr>"
lvim.builtin.which_key.mappings.t.d["2"] = "Diagnostics"
lvim.builtin.which_key.mappings.t.f["1"] = "<cmd>Trouble lsp_definitions<cr>"
lvim.builtin.which_key.mappings.t.f["2"] = "Definitions"
lvim.builtin.which_key.mappings.t.l["1"] = "<cmd>Trouble loclist<cr>"
lvim.builtin.which_key.mappings.t.l["2"] = "LocationList"
lvim.builtin.which_key.mappings.t.name = "+Trouble"
lvim.builtin.which_key.mappings.t.q["1"] = "<cmd>Trouble quickfix<cr>"
lvim.builtin.which_key.mappings.t.q["2"] = "QuickFix"
lvim.builtin.which_key.mappings.t.r["1"] = "<cmd>Trouble lsp_references<cr>"
lvim.builtin.which_key.mappings.t.r["2"] = "References"
lvim.builtin.which_key.mappings.t.w["1"] = "<cmd>Trouble lsp_workspace_diagnostics<cr>"
lvim.builtin.which_key.mappings.t.w["2"] = "Diagnostics"
lvim.builtin.which_key.mappings.w["1"] = "<cmd>w!<CR>"
lvim.builtin.which_key.mappings.w["2"] = "Save"
lvim.builtin.which_key.mappings["/"]["1"] = "<cmd>lua require('Comment.api').toggle_current_linewise()<CR>"
lvim.builtin.which_key.mappings["/"]["2"] = "Comment"
lvim.builtin.which_key.mappings[";"]["1"] = "<cmd>Dashboard<CR>"
lvim.builtin.which_key.mappings[";"]["2"] = "Dashboard"
lvim.builtin.which_key.opts.mode = "n"
lvim.builtin.which_key.opts.noremap = true
lvim.builtin.which_key.opts.nowait = true
lvim.builtin.which_key.opts.prefix = "<leader>"
lvim.builtin.which_key.opts.silent = true
lvim.builtin.which_key.setup.hidden["1"] = "<silent>"
lvim.builtin.which_key.setup.hidden["2"] = "<cmd>"
lvim.builtin.which_key.setup.hidden["3"] = "<Cmd>"
lvim.builtin.which_key.setup.hidden["4"] = "<CR>"
lvim.builtin.which_key.setup.hidden["5"] = "call"
lvim.builtin.which_key.setup.hidden["6"] = "lua"
lvim.builtin.which_key.setup.hidden["7"] = "^:"
lvim.builtin.which_key.setup.hidden["8"] = "^ "
lvim.builtin.which_key.setup.icons.breadcrumb = "»"
lvim.builtin.which_key.setup.icons.group = "+"
lvim.builtin.which_key.setup.icons.separator = "➜"
lvim.builtin.which_key.setup.layout.height.max = 25
lvim.builtin.which_key.setup.layout.height.min = 4
lvim.builtin.which_key.setup.layout.spacing = 3
lvim.builtin.which_key.setup.layout.width.max = 50
lvim.builtin.which_key.setup.layout.width.min = 20
lvim.builtin.which_key.setup.plugins.marks = true
lvim.builtin.which_key.setup.plugins.presets.g = true
lvim.builtin.which_key.setup.plugins.presets.motions = false
lvim.builtin.which_key.setup.plugins.presets.nav = true
lvim.builtin.which_key.setup.plugins.presets.operators = false
lvim.builtin.which_key.setup.plugins.presets.text_objects = false
lvim.builtin.which_key.setup.plugins.presets.windows = true
lvim.builtin.which_key.setup.plugins.presets.z = true
lvim.builtin.which_key.setup.plugins.registers = true
lvim.builtin.which_key.setup.plugins.spelling.enabled = true
lvim.builtin.which_key.setup.plugins.spelling.suggestions = 20
lvim.builtin.which_key.setup.show_help = true
lvim.builtin.which_key.setup.window.border = "single"
lvim.builtin.which_key.setup.window.margin["1"] = 1
lvim.builtin.which_key.setup.window.margin["2"] = 0
lvim.builtin.which_key.setup.window.margin["3"] = 1
lvim.builtin.which_key.setup.window.margin["4"] = 0
lvim.builtin.which_key.setup.window.padding["1"] = 2
lvim.builtin.which_key.setup.window.padding["2"] = 2
lvim.builtin.which_key.setup.window.padding["3"] = 2
lvim.builtin.which_key.setup.window.padding["4"] = 2
lvim.builtin.which_key.setup.window.position = "bottom"
lvim.builtin.which_key.vmappings["/"]["1"] =
  "<ESC><CMD>lua require('Comment.api').toggle_linewise_op(vim.fn.visualmode())<CR>"
lvim.builtin.which_key.vmappings["/"]["2"] = "Comment"
lvim.builtin.which_key.vopts.mode = "v"
lvim.builtin.which_key.vopts.noremap = true
lvim.builtin.which_key.vopts.nowait = true
lvim.builtin.which_key.vopts.prefix = "<leader>"
lvim.builtin.which_key.vopts.silent = true
lvim.colorscheme = "onedarker"
lvim.database.auto_execute = 1
lvim.database.save_location = "/Users/dmr/.config/lunarvim_db"
lvim.format_on_save = true
lvim.keys.insert_mode["<M-v>"] = "<Esc>pi"
lvim.keys.normal_mode[",gd"] = ":cd %:p:h<CR>%"
lvim.keys.normal_mode[",nt"] = ":NvimTreeToggle<CR>"
lvim.keys.normal_mode[";"] = ":"
lvim.keys.normal_mode["<C-s>"] = ":w<cr>"
lvim.keys.normal_mode["<M-c>"] = "y"
lvim.keys.visual_block_mode[""] = "y"
lvim.keys.visual_block_mode["<M-c>"] = "y"
lvim.keys.visual_mode["<M-c>"] = "y"
lvim.leader = "space"
lvim.lint_on_save = true
lvim.log.level = "info"
lvim.log.override_notify = false
lvim.log.viewer.cmd = "lnav"
lvim.log.viewer.layout_config.direction = "horizontal"
lvim.log.viewer.layout_config.open_mapping = ""
lvim.log.viewer.layout_config.size = 40
lvim.lsp.automatic_servers_installation = true
lvim.lsp.buffer_mappings.normal_mode.K["1"] = "<cmd>lua vim.lsp.buf.hover()<CR>"
lvim.lsp.buffer_mappings.normal_mode.K["2"] = "Show hover"
lvim.lsp.buffer_mappings.normal_mode.gD["1"] = "<cmd>lua vim.lsp.buf.declaration()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gD["2"] = "Goto declaration"
lvim.lsp.buffer_mappings.normal_mode.gI["1"] = "<cmd>lua vim.lsp.buf.implementation()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gI["2"] = "Goto Implementation"
lvim.lsp.buffer_mappings.normal_mode.gd["1"] = "<cmd>lua vim.lsp.buf.definition()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gd["2"] = "Goto Definition"
lvim.lsp.buffer_mappings.normal_mode.gl["1"] = "<cmd>lua require'lvim.lsp.handlers'.show_line_diagnostics()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gl["2"] = "Show line diagnostics"
lvim.lsp.buffer_mappings.normal_mode.gp["1"] = "<cmd>lua require'lvim.lsp.peek'.Peek('definition')<CR>"
lvim.lsp.buffer_mappings.normal_mode.gp["2"] = "Peek definition"
lvim.lsp.buffer_mappings.normal_mode.gr["1"] = "<cmd>lua vim.lsp.buf.references()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gr["2"] = "Goto references"
lvim.lsp.buffer_mappings.normal_mode.gs["1"] = "<cmd>lua vim.lsp.buf.signature_help()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gs["2"] = "show signature help"
lvim.lsp.code_lens_refresh = true
lvim.lsp.diagnostics.float.border = "rounded"
lvim.lsp.diagnostics.float.focusable = false
lvim.lsp.diagnostics.float.header = ""
lvim.lsp.diagnostics.float.prefix = ""
lvim.lsp.diagnostics.float.source = "always"
lvim.lsp.diagnostics.float.style = "minimal"
lvim.lsp.diagnostics.severity_sort = true
lvim.lsp.diagnostics.signs.active = true
lvim.lsp.diagnostics.signs.values["1"].name = "DiagnosticSignError"
lvim.lsp.diagnostics.signs.values["1"].text = ""
lvim.lsp.diagnostics.signs.values["2"].name = "DiagnosticSignWarn"
lvim.lsp.diagnostics.signs.values["2"].text = ""
lvim.lsp.diagnostics.signs.values["3"].name = "DiagnosticSignHint"
lvim.lsp.diagnostics.signs.values["3"].text = ""
lvim.lsp.diagnostics.signs.values["4"].name = "DiagnosticSignInfo"
lvim.lsp.diagnostics.signs.values["4"].text = ""
lvim.lsp.diagnostics.underline = true
lvim.lsp.diagnostics.update_in_insert = false
lvim.lsp.diagnostics.virtual_text = true
lvim.lsp.document_highlight = true
lvim.lsp.float.border = "rounded"
lvim.lsp.float.focusable = false
lvim.lsp.float.style = "minimal"
lvim.lsp.override["1"] = "angularls"
lvim.lsp.override["10"] = "eslintls"
lvim.lsp.override["11"] = "golangci_lint_ls"
lvim.lsp.override["12"] = "grammarly"
lvim.lsp.override["13"] = "graphql"
lvim.lsp.override["14"] = "jedi_language_server"
lvim.lsp.override["15"] = "ltex"
lvim.lsp.override["16"] = "phpactor"
lvim.lsp.override["17"] = "psalm"
lvim.lsp.override["18"] = "pylsp"
lvim.lsp.override["19"] = "quick_lint_js"
lvim.lsp.override["2"] = "ansiblels"
lvim.lsp.override["20"] = "remark_ls"
lvim.lsp.override["21"] = "rome"
lvim.lsp.override["22"] = "scry"
lvim.lsp.override["23"] = "solang"
lvim.lsp.override["24"] = "solidity_ls"
lvim.lsp.override["25"] = "sorbet"
lvim.lsp.override["26"] = "sourcekit"
lvim.lsp.override["27"] = "spectral"
lvim.lsp.override["28"] = "sqlls"
lvim.lsp.override["29"] = "sqls"
lvim.lsp.override["3"] = "ccls"
lvim.lsp.override["30"] = "stylelint_lsp"
lvim.lsp.override["31"] = "tailwindcss"
lvim.lsp.override["32"] = "tflint"
lvim.lsp.override["33"] = "verible"
lvim.lsp.override["34"] = "vuels"
lvim.lsp.override["35"] = "zeta_note"
lvim.lsp.override["36"] = "zk"
lvim.lsp.override["37"] = "pyright"
lvim.lsp.override["38"] = "r_language_server"
lvim.lsp.override["4"] = "csharp_ls"
lvim.lsp.override["5"] = "cssmodules_ls"
lvim.lsp.override["6"] = "denols"
lvim.lsp.override["7"] = "ember"
lvim.lsp.override["8"] = "emmet_ls"
lvim.lsp.override["9"] = "eslint"
lvim.lsp.templates_dir = "/Users/dmr/.local/share/lunarvim/site/after/ftplugin"
lvim.plugins["1"]["1"] = "folke/tokyonight.nvim"
lvim.plugins["10"].ft = "markdown"
lvim.plugins["10"].run = "cd app && npm install"
lvim.plugins["10"]["1"] = "iamcco/markdown-preview.nvim"
lvim.plugins["11"].event = "BufEnter *.R"
lvim.plugins["11"].opt = true
lvim.plugins["11"]["1"] = "jalvesaq/Nvim-R"
lvim.plugins["12"]["1"] = "mfussenegger/nvim-dap-python"
lvim.plugins["2"].cmd = "TroubleToggle"
lvim.plugins["2"]["1"] = "folke/trouble.nvim"
lvim.plugins["3"]["1"] = "blackCauldron7/surround.nvim"
lvim.plugins["4"].opt = true
lvim.plugins["4"]["1"] = "vim-scripts/dbext.vim"
lvim.plugins["5"]["1"] = "glacambre/firenvim"
lvim.plugins["6"].disable = false
lvim.plugins["6"]["1"] = "gelfand/copilot.vim"
lvim.plugins["7"].disable = false
lvim.plugins["7"]["1"] = "hrsh7th/cmp-copilot"
lvim.plugins["8"].event = "InsertEnter"
lvim.plugins["8"]["1"] = "ray-x/lsp_signature.nvim"
lvim.plugins["9"].cmd = "SymbolsOutline"
lvim.plugins["9"]["1"] = "simrat39/symbols-outline.nvim"
lvim.transparent_window = false
lvim.vsnip_dir = "/Users/dmr/.config/snippets"
